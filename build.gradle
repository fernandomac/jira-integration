buildscript {
	ext {
		springBootVersion = '1.5.1.RELEASE'
		swaggerAnnotationsVersion = '1.5.12'
		springfoxSwaggerVersion = '2.6.1'
		modelMapperVersion = '0.7.5'
		apacheCommonsLangVersion = '3.5'
		springOauth2Version = '2.0.12.RELEASE'
		nexusUrl = ''
		nexusUsername = ''
		nexusPassword = ''
	}
	
	
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")		
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'
apply plugin: 'maven'
apply plugin: 'distribution'

war {
	baseName = 'next_onboarding_orchestrator'
	version = '1.3.13'
}

sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven {
        url "https://m2proxy.atlassian.com/repository/public"
    }
}

configurations {
	providedRuntime
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-integration')
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-web-services')
	compile("io.swagger:swagger-annotations:${swaggerAnnotationsVersion}")
	compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
	compile("io.springfox:springfox-swagger2:${springfoxSwaggerVersion}")
	compile("org.modelmapper:modelmapper:${modelMapperVersion}")
	compile("org.apache.commons:commons-lang3:${apacheCommonsLangVersion}")
	compile("org.springframework.security.oauth:spring-security-oauth2:${springOauth2Version}")
	compile("br.com.caelum.stella:caelum-stella-core:2.1.2")
	compile("br.com.caelum.stella:caelum-stella-faces:2.1.2")
	compile group: 'com.atlassian.jira', name: 'jira-rest-java-client-core', version: '4.0.0'
	compile group: 'com.atlassian.jira', name: 'jira-rest-java-client-api', version: '4.0.0'
	compile group: 'com.atlassian.fugue', name: 'fugue', version: '2.6.1'
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}


distributions {
	main{
		baseName = "jira_sample_${war.version}_bundle"
		contents {
			from war
			from {"src/runbooks/runbook(pt).txt"}
			from {"src/runbooks/runbook(en).txt"}
			from {"src/main/resources/jira-sample.properties"}			
			from {"src/runbooks/manual_de_instalacao.doc"}
		}
	}
}


uploadArchives {
  repositories {
    mavenDeployer {
      repository(url: "${nexusUrl}/releases") {
      	authentication(userName: "${nexusUsername}", password: "${nexusPassword}")
        pom.version = "${war.version}"
      	pom.artifactId = "${war.baseName}"
         
      }
      snapshotRepository(url: "${nexusUrl}/snapshot") {
      	authentication(userName: "${nexusUsername}", password: "${nexusPassword}")
      	pom.version = "${war.version}"
      	pom.artifactId = "${war.baseName}"
      }
    }
  }
}